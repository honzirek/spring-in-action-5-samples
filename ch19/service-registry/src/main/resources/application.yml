server:
  port: 8761
  ssl:
    enabled: true
    key-store-type: PKCS12
    key-store: ../keystore.p12
    key-store-password: test
    key-alias: bootifulsecurity
  
eureka:
  instance:
    hostname: service-registry
    secure-port-enabled: true
    secure-port: ${server.port}
    status-page-url: https://${eureka.hostname}:${server.port}/actuator/info
    health-check-url: https://${eureka.hostname}:${server.port}/actuator/health
    home-page-url: https://${eureka.hostname}${server.port}/
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: https://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    enable-self-preservation: false

logging:
  level:
    root: INFO
  file: /logs/logs-service-registry.log

#
# Uncomment if you'd rather use multi-peer Eureka with the eureka-1 and eureka-2 
# profiles below (see Listing 13.1)
#   
#eureka:
#  client:
#    service-url:
#      defaultZone: http://${other.eureka.host}:${other.eureka.port}/eureka
    
---
spring:
  profiles: eureka-1
  application:
    name: eureka-1

server:
  port: 8761

eureka:
  instance:
    hostname: eureka1.tacocloud.com

other:
  eureka:
    host: localhost
    port: 8762

---
spring:
  profiles: eureka-2
  application:
    name: eureka-2

server:
  port: 8762

eureka:
  instance:
    hostname: eureka1.tacocloud.com

other:
  eureka:
    host: localhost
    port: 8762
